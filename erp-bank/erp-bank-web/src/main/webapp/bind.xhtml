<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui">

<h:head></h:head>
<body>

	<h2>Insert a valide email adress</h2>
	<p:separator />

	<h:form>
		<p:growl showDetail="true" />


		<h:panelGrid columns="4" cellpadding="5">
			<h:outputLabel for="email1" value="Email 1: (JSF Validation)" />
			<p:inputText id="email1" value="#{callOfferBean.text}">
				<f:validator validatorId="custom.emailValidator" />
			</p:inputText>
			<p:message for="email1" display="tooltip" />
			<h:outputText value="#{callOfferBean.text}" />
			<p:commandButton value="email syntaxe" ajax="false"
				icon="ui-icon-check" validateClient="true" />

		</h:panelGrid>



	</h:form>
	<!--  
	<form>
		<h:panelGrid columns="2" id="matchGrid" cellpadding="5">
			<h:outputLabel for="pwd1" value="Password 1: *" />
			<p:password id="pwd1" value="#{callOfferBean.password}"
				required="true" />

		</h:panelGrid>
	</form>
	-->
	<p:spacer height="10" />
	<h2>Upload required Document</h2>
	<p:separator />

	<h:form id="form">

		<p:fileUpload fileUploadListener="#{fileUploadController.upload}"
			allowTypes="/(\.|\/)(gif|jpe?g|png)$/" sizeLimit="100000"
			description="Select Images" />

	</h:form>
	<p:spacer height="10" />
	<h2>Verifying user response</h2>
	<p:separator />
	<h:form>
		<p:messages showDetail="true" />
		<p:captcha label="Captcha" />
		<p:commandButton value="Check" actionListener="#{captchaBean.submit}"
			ajax="false" />
	</h:form>
	<p:spacer height="10" />
	<p:separator />
	<h:form>
	<p:commandButton action="#{bidBean.doaddBid()}" >
					
	</p:commandButton>
</h:form>

	<script type="text/javascript">
    /**
     * Faces Validator
     */
    PrimeFaces.validator['custom.emailValidator'] = {
 
        pattern: /\S+@\S+/,
 
        validate: function(element, value) {
            //use element.data() to access validation metadata, in this case there is none.
            if(!this.pattern.test(value)) {
                throw {
                    summary: 'Validation Error',
                    detail: value + ' is not a valid email.'
                }
            }
        }
    };
 
    /**
     * Bean validator
     */
    PrimeFaces.validator['Email'] = {
 
        pattern: /\S+@\S+/,
 
        MESSAGE_ID: 'org.primefaces.examples.validate.email.message',
 
        validate: function(element, value) {
            var vc = PrimeFaces.util.ValidationContext;
 
            if(!this.pattern.test(value)) {
                var msgStr = element.data('p-email-msg'),
                msg = msgStr ? {summary:msgStr, detail: msgStr} : vc.getMessage(this.MESSAGE_ID);
 
                throw msg;
            }
        }
    };
</script>
</body>

</html>
